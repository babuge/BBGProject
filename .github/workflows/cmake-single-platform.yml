# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

  
    
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    steps:
    
    - name: Install Qt5/Qt6 (yaqti)
      uses: WillBrennan/yaqti@2021.07.29
      with:
        # The Qt version to install , 6.2.1 or 5.12.2
        version: '5.12.2' 
        # install os; linux, windows, or mac
        os: linux
        # what platform are you installing for? desktop, winrt, android, or ios
        platform: desktop
        # what optional Qt modules to install? qtcharts, qtnetworkauth ect...
        # modules: 
        
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/Build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/Build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/Build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

